<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="13" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Test suite" duration-ms="353165" started-at="2020-05-26T16:03:45 EEST" finished-at="2020-05-26T16:09:38 EEST">
    <groups>
    </groups>
    <test name="Tests" duration-ms="353165" started-at="2020-05-26T16:03:45 EEST" finished-at="2020-05-26T16:09:38 EEST">
      <class name="org.academy.web.tests.UserTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.UserTest@4493d195]" name="openDriver" is-config="true" duration-ms="4668" started-at="2020-05-26T16:09:04 EEST" finished-at="2020-05-26T16:09:08 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.UserTest@4493d195]" name="precondition" is-config="true" duration-ms="23721" started-at="2020-05-26T16:09:08 EEST" finished-at="2020-05-26T16:09:32 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="forkedUsersCheck()[pri:0, instance:org.academy.web.tests.UserTest@4493d195]" name="forkedUsersCheck" duration-ms="4203" started-at="2020-05-26T16:09:32 EEST" description="get forked users and check them in &#039;Network&#039;" finished-at="2020-05-26T16:09:36 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forkedUsersCheck -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.UserTest@4493d195]" name="closeDriver" is-config="true" duration-ms="1329" started-at="2020-05-26T16:09:36 EEST" finished-at="2020-05-26T16:09:38 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.UserTest -->
      <class name="org.academy.web.tests.SearchFileTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.SearchFileTest@6ee52dcd]" name="openDriver" is-config="true" duration-ms="6924" started-at="2020-05-26T16:08:26 EEST" finished-at="2020-05-26T16:08:33 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.SearchFileTest@6ee52dcd]" name="precondition" is-config="true" duration-ms="23213" started-at="2020-05-26T16:08:33 EEST" finished-at="2020-05-26T16:08:56 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="fileContentTest()[pri:0, instance:org.academy.web.tests.SearchFileTest@6ee52dcd]" name="fileContentTest" duration-ms="6544" started-at="2020-05-26T16:08:56 EEST" description="Find and read file contents" finished-at="2020-05-26T16:09:03 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fileContentTest -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.SearchFileTest@6ee52dcd]" name="closeDriver" is-config="true" duration-ms="1172" started-at="2020-05-26T16:09:03 EEST" finished-at="2020-05-26T16:09:04 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.SearchFileTest -->
      <class name="org.academy.web.tests.ActionTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.ActionTest@536aaa8d]" name="openDriver" is-config="true" duration-ms="13035" started-at="2020-05-26T16:03:45 EEST" finished-at="2020-05-26T16:03:58 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.ActionTest@536aaa8d]" name="precondition" is-config="true" duration-ms="36290" started-at="2020-05-26T16:03:58 EEST" finished-at="2020-05-26T16:04:34 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="getHash()[pri:0, instance:org.academy.web.tests.ActionTest@536aaa8d]" name="getHash" duration-ms="599" started-at="2020-05-26T16:04:34 EEST" finished-at="2020-05-26T16:04:35 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHash -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.ActionTest@536aaa8d]" name="closeDriver" is-config="true" duration-ms="2530" started-at="2020-05-26T16:04:35 EEST" finished-at="2020-05-26T16:04:37 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.ActionTest -->
      <class name="org.academy.web.tests.LongScenarioTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.LongScenarioTest@76f2b07d]" name="openDriver" is-config="true" duration-ms="10464" started-at="2020-05-26T16:06:51 EEST" finished-at="2020-05-26T16:07:01 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LongScenarioTest@76f2b07d]" name="precondition" is-config="true" duration-ms="27688" started-at="2020-05-26T16:07:01 EEST" finished-at="2020-05-26T16:07:29 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="FAIL" signature="getCommitHashCode()[pri:0, instance:org.academy.web.tests.LongScenarioTest@76f2b07d]" name="getCommitHashCode" duration-ms="10489" started-at="2020-05-26T16:07:29 EEST" finished-at="2020-05-26T16:07:40 EEST">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-T36K6HM', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\Karina\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3254}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: de825a83e407a510a4e3adb505211f81]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-T36K6HM', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\Karina\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3254}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: de825a83e407a510a4e3adb505211f81
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at org.academy.web.pages.KanbanBoardPage.goToPullPage(KanbanBoardPage.java:40)
at org.academy.web.tests.LongScenarioTest.getCommitHashCode(LongScenarioTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommitHashCode -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.LongScenarioTest@76f2b07d]" name="closeDriver" is-config="true" duration-ms="1081" started-at="2020-05-26T16:07:40 EEST" finished-at="2020-05-26T16:07:41 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.LongScenarioTest -->
      <class name="org.academy.web.tests.IssueTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.IssueTest@e320068]" name="openDriver" is-config="true" duration-ms="14706" started-at="2020-05-26T16:04:37 EEST" finished-at="2020-05-26T16:04:52 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="login()[pri:0, instance:org.academy.web.tests.IssueTest@e320068]" name="login" is-config="true" duration-ms="25483" started-at="2020-05-26T16:04:52 EEST" finished-at="2020-05-26T16:05:17 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="getCommentTest()[pri:0, instance:org.academy.web.tests.IssueTest@e320068]" name="getCommentTest" duration-ms="51913" started-at="2020-05-26T16:05:17 EEST" finished-at="2020-05-26T16:06:09 EEST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#issue_3_alhonchar_academylessons_link"}
  (Session info: chrome=81.0.4044.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-T36K6HM', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\Karina\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3079}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: c41bc53a6d91a7875a446a587b2a8ab2
*** Element info: {Using=id, value=issue_3_alhonchar_academylessons_link}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#issue_3_alhonchar_academylessons_link"}
  (Session info: chrome=81.0.4044.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-T36K6HM', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\Karina\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:3079}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: c41bc53a6d91a7875a446a587b2a8ab2
*** Element info: {Using=id, value=issue_3_alhonchar_academylessons_link}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at org.academy.web.pages.IssuesPage.clickOnIssue21420(IssuesPage.java:20)
at org.academy.web.tests.IssueTest.getCommentTest(IssueTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommentTest -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.IssueTest@e320068]" name="closeDriver" is-config="true" duration-ms="1007" started-at="2020-05-26T16:06:09 EEST" finished-at="2020-05-26T16:06:10 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.IssueTest -->
      <class name="org.academy.web.tests.LoginTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="openDriver" is-config="true" duration-ms="10581" started-at="2020-05-26T16:06:10 EEST" finished-at="2020-05-26T16:06:21 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="5338" started-at="2020-05-26T16:06:21 EEST" finished-at="2020-05-26T16:06:26 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="2487" started-at="2020-05-26T16:06:26 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:29 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="2411" started-at="2020-05-26T16:06:29 EEST" finished-at="2020-05-26T16:06:31 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="1182" started-at="2020-05-26T16:06:31 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:32 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[alhonchar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="2176" started-at="2020-05-26T16:06:32 EEST" finished-at="2020-05-26T16:06:34 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="1093" started-at="2020-05-26T16:06:34 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:36 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alex123456&*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="1967" started-at="2020-05-26T16:06:36 EEST" finished-at="2020-05-26T16:06:38 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="1296" started-at="2020-05-26T16:06:38 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:39 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[alhonchar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[alhonchar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="2018" started-at="2020-05-26T16:06:39 EEST" finished-at="2020-05-26T16:06:41 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="1388" started-at="2020-05-26T16:06:41 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:42 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alex123456&*]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alex123456&*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="2311" started-at="2020-05-26T16:06:42 EEST" finished-at="2020-05-26T16:06:45 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="negativeLoginTest(java.lang.String, java.lang.String)[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="negativeLoginTest" duration-ms="1426" started-at="2020-05-26T16:06:45 EEST" data-provider="login form provider" finished-at="2020-05-26T16:06:46 EEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[login with spaces]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alex123456&*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLoginTest -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="precondition" is-config="true" duration-ms="2092" started-at="2020-05-26T16:06:46 EEST" finished-at="2020-05-26T16:06:48 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="positiveLoginTest()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="positiveLoginTest" duration-ms="1802" started-at="2020-05-26T16:06:48 EEST" finished-at="2020-05-26T16:06:50 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLoginTest -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.LoginTest@1f57539]" name="closeDriver" is-config="true" duration-ms="1144" started-at="2020-05-26T16:06:50 EEST" finished-at="2020-05-26T16:06:51 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.LoginTest -->
      <class name="org.academy.web.tests.MarketplaceTest">
        <test-method status="PASS" signature="openDriver()[pri:0, instance:org.academy.web.tests.MarketplaceTest@704a52ec]" name="openDriver" is-config="true" duration-ms="13548" started-at="2020-05-26T16:07:41 EEST" finished-at="2020-05-26T16:07:54 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="precondition()[pri:0, instance:org.academy.web.tests.MarketplaceTest@704a52ec]" name="precondition" is-config="true" duration-ms="21378" started-at="2020-05-26T16:07:54 EEST" finished-at="2020-05-26T16:08:16 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method status="PASS" signature="slackResults()[pri:0, instance:org.academy.web.tests.MarketplaceTest@704a52ec]" name="slackResults" duration-ms="8587" started-at="2020-05-26T16:08:16 EEST" finished-at="2020-05-26T16:08:24 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slackResults -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:org.academy.web.tests.MarketplaceTest@704a52ec]" name="closeDriver" is-config="true" duration-ms="1712" started-at="2020-05-26T16:08:24 EEST" finished-at="2020-05-26T16:08:26 EEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- org.academy.web.tests.MarketplaceTest -->
    </test> <!-- Tests -->
  </suite> <!-- Test suite -->
</testng-results>
